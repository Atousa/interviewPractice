
    /*
        private static class TreeNode{
            public int label;
            public TreeNode left_ptr;
            public TreeNode right_ptr;
        }

        Complete the function below
    */


    public static List<List<Integer>> zigzag_level_order_traversal(TreeNode root) {
    
        List<List<Integer>> result = new ArrayList<>();
        
        if (root == null) return result;
        
        int level = 0;
        
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        
        while(!q.isEmpty()) {
            int size = q.size();
             List<Integer> res = new ArrayList<>();
            while(size>0) {
                TreeNode n = q.poll();
                res.add(n.label);
                if(n.left_ptr!= null) {
                    q.add(n.left_ptr);
                }
                if(n.right_ptr!= null) {
                    q.add(n.right_ptr);
                }
                size--;
            }
            if(level % 2 != 0) {
                Collections.reverse(res);
            }
            level++;
            result.add(res);
        }
        return result;
            
    }
    
        
   

